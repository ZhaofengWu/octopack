<mxfile host="app.diagrams.net" modified="2023-08-11T15:07:25.772Z" agent="Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/115.0.0.0 Safari/537.36" etag="V4mYqbYhqhtJEP59LyC7" version="21.6.7" type="device" pages="3">
  <diagram name="HumanEvalPack" id="skrlXe9XcOXq9REyti5s">
    <mxGraphModel dx="984" dy="662" grid="1" gridSize="10" guides="1" tooltips="1" connect="1" arrows="1" fold="1" page="1" pageScale="1" pageWidth="850" pageHeight="1100" math="0" shadow="0">
      <root>
        <mxCell id="eerOrv8SsKk9PBUY99kf-0" />
        <mxCell id="eerOrv8SsKk9PBUY99kf-1" parent="eerOrv8SsKk9PBUY99kf-0" />
        <mxCell id="eerOrv8SsKk9PBUY99kf-2" value="&lt;b&gt;&lt;font style=&quot;&quot;&gt;&lt;span style=&quot;font-size: 25px;&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/font&gt;&lt;/b&gt;" style="rounded=1;whiteSpace=wrap;html=1;fillColor=#e1d5e7;strokeColor=#9673a6;" parent="eerOrv8SsKk9PBUY99kf-1" vertex="1">
          <mxGeometry x="160" y="80" width="1240" height="120" as="geometry" />
        </mxCell>
        <mxCell id="eerOrv8SsKk9PBUY99kf-3" value="" style="rounded=0;whiteSpace=wrap;html=1;fillColor=#dae8fc;strokeColor=#6c8ebf;" parent="eerOrv8SsKk9PBUY99kf-1" vertex="1">
          <mxGeometry x="1000" y="260" width="400" height="160" as="geometry" />
        </mxCell>
        <mxCell id="eerOrv8SsKk9PBUY99kf-4" value="&lt;h1 style=&quot;line-height: 70%; font-size: 24px;&quot;&gt;&lt;span style=&quot;background-color: initial; font-size: 24px;&quot;&gt;&lt;font style=&quot;font-size: 24px;&quot;&gt;Languages:&lt;span style=&quot;font-weight: normal; font-size: 24px;&quot;&gt; Python, JavaScript, Java, Go, C++, Rust&lt;/span&gt;&lt;/font&gt;&lt;/span&gt;&lt;/h1&gt;&lt;h1 style=&quot;line-height: 70%; font-size: 24px;&quot;&gt;&lt;font style=&quot;font-size: 24px;&quot;&gt;&lt;font style=&quot;font-size: 24px;&quot;&gt;Subtasks:&lt;/font&gt;&lt;font style=&quot;font-weight: normal; font-size: 24px;&quot;&gt; HumanEvalFix, HumanEvalExplain, HumanEvalSynthesize&lt;/font&gt;&lt;/font&gt;&lt;/h1&gt;" style="text;html=1;strokeColor=none;fillColor=none;spacing=10;spacingTop=-20;whiteSpace=wrap;overflow=hidden;rounded=0;fontSize=24;" parent="eerOrv8SsKk9PBUY99kf-1" vertex="1">
          <mxGeometry x="160" y="130" width="1240" height="70" as="geometry" />
        </mxCell>
        <mxCell id="eerOrv8SsKk9PBUY99kf-5" value="&lt;div style=&quot;font-size: 13px;&quot;&gt;Write a Python function `has_close_elements(numbers: List[float], threshold: float) -&amp;gt; bool` to solve the following problem:&lt;/div&gt;&lt;div style=&quot;font-size: 13px;&quot;&gt;Check if in given list of numbers, are any two numbers closer to each other than&amp;nbsp;&lt;span style=&quot;background-color: initial;&quot;&gt;given threshold.&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;font-size: 13px;&quot;&gt;&amp;gt;&amp;gt;&amp;gt; has_close_elements([1.0, 2.0, 3.0], 0.5)&lt;/div&gt;&lt;div style=&quot;font-size: 13px;&quot;&gt;False&lt;/div&gt;&lt;div style=&quot;font-size: 13px;&quot;&gt;&amp;gt;&amp;gt;&amp;gt; has_close_elements([1.0, 2.8, 3.0, 4.0, 5.0, 2.0], 0.3)&lt;/div&gt;&lt;div style=&quot;font-size: 13px;&quot;&gt;True&lt;/div&gt;" style="text;html=1;strokeColor=none;fillColor=none;align=left;verticalAlign=middle;whiteSpace=wrap;rounded=0;spacingTop=0;spacingLeft=0;spacingRight=0;spacingBottom=0;spacing=5;fontSize=13;" parent="eerOrv8SsKk9PBUY99kf-1" vertex="1">
          <mxGeometry x="1000" y="260" width="400" height="160" as="geometry" />
        </mxCell>
        <mxCell id="eerOrv8SsKk9PBUY99kf-6" value="&lt;h1 style=&quot;line-height: 70%; font-size: 28px;&quot;&gt;HumanEvalPack&lt;/h1&gt;" style="text;html=1;strokeColor=none;fillColor=none;spacing=7;spacingTop=-20;whiteSpace=wrap;overflow=hidden;rounded=0;align=center;fontSize=28;" parent="eerOrv8SsKk9PBUY99kf-1" vertex="1">
          <mxGeometry x="160" y="80" width="1240" height="50" as="geometry" />
        </mxCell>
        <mxCell id="eerOrv8SsKk9PBUY99kf-7" value="" style="rounded=0;whiteSpace=wrap;html=1;fillColor=#f8cecc;strokeColor=#b85450;" parent="eerOrv8SsKk9PBUY99kf-1" vertex="1">
          <mxGeometry x="1000" y="420" width="400" height="340" as="geometry" />
        </mxCell>
        <mxCell id="eerOrv8SsKk9PBUY99kf-8" value="&lt;div style=&quot;font-size: 13px;&quot;&gt;&lt;div style=&quot;border-color: var(--border-color); font-size: 13px;&quot;&gt;from typing import List&lt;/div&gt;&lt;div style=&quot;border-color: var(--border-color); font-size: 13px;&quot;&gt;&lt;br style=&quot;border-color: var(--border-color); font-size: 13px;&quot;&gt;&lt;/div&gt;&lt;div style=&quot;border-color: var(--border-color); font-size: 13px;&quot;&gt;&lt;br style=&quot;border-color: var(--border-color); font-size: 13px;&quot;&gt;&lt;/div&gt;&lt;div style=&quot;border-color: var(--border-color); font-size: 13px;&quot;&gt;def has_close_elements(numbers: List[float], threshold: float) -&amp;gt; bool:&lt;/div&gt;&lt;div style=&quot;border-color: var(--border-color); font-size: 13px;&quot;&gt;&amp;nbsp; &amp;nbsp; &quot;&quot;&quot; Check if in given list of numbers, are any two numbers closer to each other than&amp;nbsp;&lt;span style=&quot;background-color: initial;&quot;&gt;given threshold.&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;border-color: var(--border-color); font-size: 13px;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;gt;&amp;gt;&amp;gt; has_close_elements([1.0, 2.0, 3.0], 0.5)&lt;/div&gt;&lt;div style=&quot;border-color: var(--border-color); font-size: 13px;&quot;&gt;&amp;nbsp; &amp;nbsp; False&lt;/div&gt;&lt;div style=&quot;border-color: var(--border-color); font-size: 13px;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;gt;&amp;gt;&amp;gt; has_close_elements([1.0, 2.8, 3.0, 4.0, 5.0, 2.0], 0.3)&lt;/div&gt;&lt;div style=&quot;border-color: var(--border-color); font-size: 13px;&quot;&gt;&amp;nbsp; &amp;nbsp; True&lt;/div&gt;&lt;div style=&quot;border-color: var(--border-color); font-size: 13px;&quot;&gt;&amp;nbsp; &amp;nbsp; &quot;&quot;&quot;&lt;/div&gt;&lt;/div&gt;&lt;div style=&quot;font-size: 13px;&quot;&gt;&amp;nbsp; &amp;nbsp; for idx, elem in enumerate(numbers):&lt;/div&gt;&lt;div style=&quot;font-size: 13px;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; for idx2, elem2 in enumerate(numbers):&lt;/div&gt;&lt;div style=&quot;font-size: 13px;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; if idx != idx2:&lt;/div&gt;&lt;div style=&quot;font-size: 13px;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; distance = abs(elem - elem2)&lt;/div&gt;&lt;div style=&quot;font-size: 13px;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; if distance &amp;lt; threshold:&lt;/div&gt;&lt;div style=&quot;font-size: 13px;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; return True&lt;/div&gt;&lt;div style=&quot;font-size: 13px;&quot;&gt;&lt;br style=&quot;font-size: 13px;&quot;&gt;&lt;/div&gt;&lt;div style=&quot;font-size: 13px;&quot;&gt;&amp;nbsp; &amp;nbsp; return False&lt;/div&gt;" style="text;html=1;strokeColor=none;fillColor=none;align=left;verticalAlign=middle;whiteSpace=wrap;rounded=0;spacing=5;fontSize=13;" parent="eerOrv8SsKk9PBUY99kf-1" vertex="1">
          <mxGeometry x="1000" y="420" width="400" height="340" as="geometry" />
        </mxCell>
        <mxCell id="eerOrv8SsKk9PBUY99kf-11" value="" style="rounded=0;whiteSpace=wrap;html=1;fillColor=#dae8fc;strokeColor=#6c8ebf;" parent="eerOrv8SsKk9PBUY99kf-1" vertex="1">
          <mxGeometry x="580" y="260" width="400" height="250" as="geometry" />
        </mxCell>
        <mxCell id="eerOrv8SsKk9PBUY99kf-12" value="&lt;div style=&quot;font-size: 13px;&quot;&gt;from typing import List&lt;/div&gt;&lt;div style=&quot;font-size: 13px;&quot;&gt;&lt;br style=&quot;font-size: 13px;&quot;&gt;&lt;/div&gt;&lt;div style=&quot;font-size: 13px;&quot;&gt;&lt;br style=&quot;font-size: 13px;&quot;&gt;&lt;/div&gt;&lt;div style=&quot;font-size: 13px;&quot;&gt;def has_close_elements(numbers: List[float], threshold: float) -&amp;gt; bool:for idx, elem in enumerate(numbers):&lt;/div&gt;&lt;div style=&quot;font-size: 13px;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; for idx2, elem2 in enumerate(numbers):&lt;/div&gt;&lt;div style=&quot;font-size: 13px;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; if idx != idx2:&lt;/div&gt;&lt;div style=&quot;font-size: 13px;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; distance = abs(elem - elem2)&lt;/div&gt;&lt;div style=&quot;font-size: 13px;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; if distance &amp;lt; threshold:&lt;/div&gt;&lt;div style=&quot;font-size: 13px;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; return True&lt;/div&gt;&lt;div style=&quot;font-size: 13px;&quot;&gt;&lt;br style=&quot;font-size: 13px;&quot;&gt;&lt;/div&gt;&lt;div style=&quot;font-size: 13px;&quot;&gt;&amp;nbsp; &amp;nbsp; return False&lt;/div&gt;&lt;div style=&quot;font-size: 13px;&quot;&gt;&lt;br style=&quot;font-size: 13px;&quot;&gt;&lt;/div&gt;&lt;div style=&quot;font-size: 13px;&quot;&gt;Provide a concise natural language description of the function using at most 213 characters.&lt;/div&gt;" style="text;html=1;strokeColor=none;fillColor=none;align=left;verticalAlign=middle;whiteSpace=wrap;rounded=0;spacing=5;fontSize=13;" parent="eerOrv8SsKk9PBUY99kf-1" vertex="1">
          <mxGeometry x="580" y="260" width="400" height="250" as="geometry" />
        </mxCell>
        <mxCell id="eerOrv8SsKk9PBUY99kf-13" value="" style="rounded=0;whiteSpace=wrap;html=1;fillColor=#f8cecc;strokeColor=#b85450;" parent="eerOrv8SsKk9PBUY99kf-1" vertex="1">
          <mxGeometry x="580" y="510" width="400" height="120" as="geometry" />
        </mxCell>
        <mxCell id="eerOrv8SsKk9PBUY99kf-14" value="&lt;div style=&quot;font-size: 13px;&quot;&gt;Check if in given list of numbers, are any two numbers closer to each other than&amp;nbsp;&lt;span style=&quot;background-color: initial;&quot;&gt;given threshold.&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;font-size: 13px;&quot;&gt;&amp;gt;&amp;gt;&amp;gt; has_close_elements([1.0, 2.0, 3.0], 0.5)&lt;/div&gt;&lt;div style=&quot;font-size: 13px;&quot;&gt;False&lt;/div&gt;&lt;div style=&quot;font-size: 13px;&quot;&gt;&amp;gt;&amp;gt;&amp;gt; has_close_elements([1.0, 2.8, 3.0, 4.0, 5.0, 2.0], 0.3)&lt;/div&gt;&lt;div style=&quot;font-size: 13px;&quot;&gt;True&lt;/div&gt;" style="text;html=1;strokeColor=none;fillColor=none;align=left;verticalAlign=middle;whiteSpace=wrap;rounded=0;spacing=5;fontSize=13;" parent="eerOrv8SsKk9PBUY99kf-1" vertex="1">
          <mxGeometry x="580" y="510" width="400" height="120" as="geometry" />
        </mxCell>
        <mxCell id="eerOrv8SsKk9PBUY99kf-15" value="" style="rounded=0;whiteSpace=wrap;html=1;fillColor=#dae8fc;strokeColor=#6c8ebf;" parent="eerOrv8SsKk9PBUY99kf-1" vertex="1">
          <mxGeometry x="580" y="630" width="400" height="100" as="geometry" />
        </mxCell>
        <mxCell id="eerOrv8SsKk9PBUY99kf-16" value="&lt;div style=&quot;font-size: 13px;&quot;&gt;&lt;div style=&quot;border-color: var(--border-color);&quot;&gt;Check if in given list of numbers, are any...&lt;br&gt;&lt;/div&gt;&lt;div style=&quot;border-color: var(--border-color);&quot;&gt;...&lt;/div&gt;&lt;/div&gt;&lt;div style=&quot;font-size: 13px;&quot;&gt;Write functional code in Python according to the description.&lt;/div&gt;" style="text;html=1;strokeColor=none;fillColor=none;align=left;verticalAlign=middle;whiteSpace=wrap;rounded=0;spacing=5;fontSize=13;" parent="eerOrv8SsKk9PBUY99kf-1" vertex="1">
          <mxGeometry x="580" y="630" width="400" height="90" as="geometry" />
        </mxCell>
        <mxCell id="eerOrv8SsKk9PBUY99kf-17" value="" style="rounded=0;whiteSpace=wrap;html=1;fillColor=#f8cecc;strokeColor=#b85450;" parent="eerOrv8SsKk9PBUY99kf-1" vertex="1">
          <mxGeometry x="580" y="730" width="400" height="210" as="geometry" />
        </mxCell>
        <mxCell id="eerOrv8SsKk9PBUY99kf-19" value="" style="rounded=0;whiteSpace=wrap;html=1;fillColor=#dae8fc;strokeColor=#6c8ebf;" parent="eerOrv8SsKk9PBUY99kf-1" vertex="1">
          <mxGeometry x="1040" y="795" width="100" height="50" as="geometry" />
        </mxCell>
        <mxCell id="eerOrv8SsKk9PBUY99kf-21" value="&lt;h1 style=&quot;line-height: 70%; font-size: 24px;&quot;&gt;Fix Code&lt;/h1&gt;" style="text;html=1;strokeColor=none;fillColor=none;spacing=5;spacingTop=-20;whiteSpace=wrap;overflow=hidden;rounded=0;align=center;fontSize=24;" parent="eerOrv8SsKk9PBUY99kf-1" vertex="1">
          <mxGeometry x="160" y="220" width="400" height="50" as="geometry" />
        </mxCell>
        <mxCell id="eerOrv8SsKk9PBUY99kf-22" value="&lt;h1 style=&quot;line-height: 70%; font-size: 24px;&quot;&gt;Explain Code&lt;/h1&gt;" style="text;html=1;strokeColor=none;fillColor=none;spacing=5;spacingTop=-20;whiteSpace=wrap;overflow=hidden;rounded=0;align=center;fontSize=24;" parent="eerOrv8SsKk9PBUY99kf-1" vertex="1">
          <mxGeometry x="580" y="220" width="400" height="40" as="geometry" />
        </mxCell>
        <mxCell id="eerOrv8SsKk9PBUY99kf-23" value="&lt;h1 style=&quot;line-height: 70%; font-size: 24px;&quot;&gt;Synthesize Code&lt;/h1&gt;" style="text;html=1;strokeColor=none;fillColor=none;spacing=5;spacingTop=-20;whiteSpace=wrap;overflow=hidden;rounded=0;align=center;fontSize=24;" parent="eerOrv8SsKk9PBUY99kf-1" vertex="1">
          <mxGeometry x="1000" y="220" width="400" height="40" as="geometry" />
        </mxCell>
        <mxCell id="eerOrv8SsKk9PBUY99kf-24" value="&lt;h1 style=&quot;line-height: 70%; font-size: 26px;&quot;&gt;Model Input&lt;/h1&gt;" style="text;html=1;strokeColor=none;fillColor=none;spacing=5;spacingTop=-20;whiteSpace=wrap;overflow=hidden;rounded=0;align=center;fontSize=26;" parent="eerOrv8SsKk9PBUY99kf-1" vertex="1">
          <mxGeometry x="1140" y="803.75" width="220" height="32.5" as="geometry" />
        </mxCell>
        <mxCell id="eerOrv8SsKk9PBUY99kf-25" value="&lt;h1 style=&quot;line-height: 70%; font-size: 24px;&quot;&gt;&lt;span style=&quot;background-color: initial; font-size: 24px;&quot;&gt;&lt;font style=&quot;font-size: 24px;&quot;&gt;Metric:&lt;span style=&quot;font-weight: normal; font-size: 24px;&quot;&gt;&amp;nbsp;Pass@k&lt;/span&gt;&lt;/font&gt;&lt;/span&gt;&lt;/h1&gt;&lt;h1 style=&quot;line-height: 70%; font-size: 24px;&quot;&gt;Creation:&lt;span style=&quot;font-weight: 400; font-size: 24px;&quot;&gt; Humans&lt;/span&gt;&lt;/h1&gt;" style="text;html=1;strokeColor=none;fillColor=none;spacing=10;spacingTop=-20;whiteSpace=wrap;overflow=hidden;rounded=0;align=right;fontSize=24;" parent="eerOrv8SsKk9PBUY99kf-1" vertex="1">
          <mxGeometry x="160" y="130" width="1240" height="70" as="geometry" />
        </mxCell>
        <mxCell id="eerOrv8SsKk9PBUY99kf-26" value="&lt;h1 style=&quot;line-height: 70%; font-size: 26px;&quot;&gt;Target Output&lt;/h1&gt;" style="text;html=1;strokeColor=none;fillColor=none;spacing=0;spacingTop=-20;whiteSpace=wrap;overflow=hidden;rounded=0;align=center;fontSize=26;" parent="eerOrv8SsKk9PBUY99kf-1" vertex="1">
          <mxGeometry x="1150" y="885" width="220" height="30" as="geometry" />
        </mxCell>
        <mxCell id="eerOrv8SsKk9PBUY99kf-27" value="" style="rounded=0;whiteSpace=wrap;html=1;fillColor=#dae8fc;strokeColor=#6c8ebf;" parent="eerOrv8SsKk9PBUY99kf-1" vertex="1">
          <mxGeometry x="160" y="260" width="400" height="470" as="geometry" />
        </mxCell>
        <mxCell id="eerOrv8SsKk9PBUY99kf-28" value="&lt;div style=&quot;font-size: 13px;&quot;&gt;from typing import List&lt;/div&gt;&lt;div style=&quot;font-size: 13px;&quot;&gt;&lt;br style=&quot;font-size: 13px;&quot;&gt;&lt;/div&gt;&lt;div style=&quot;font-size: 13px;&quot;&gt;&lt;br style=&quot;font-size: 13px;&quot;&gt;&lt;/div&gt;&lt;div style=&quot;font-size: 13px;&quot;&gt;def has_close_elements(numbers: List[float], threshold: float) -&amp;gt; bool:&lt;/div&gt;&lt;div style=&quot;font-size: 13px;&quot;&gt;&amp;nbsp; &amp;nbsp; for idx, elem in enumerate(numbers):&lt;/div&gt;&lt;div style=&quot;font-size: 13px;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; for idx2, elem2 in enumerate(numbers):&lt;/div&gt;&lt;div style=&quot;font-size: 13px;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; if idx != idx2:&lt;/div&gt;&lt;div style=&quot;font-size: 13px;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; distance = elem - elem2&lt;/div&gt;&lt;div style=&quot;font-size: 13px;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; if distance &amp;lt; threshold:&lt;/div&gt;&lt;div style=&quot;font-size: 13px;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; return True&lt;/div&gt;&lt;div style=&quot;font-size: 13px;&quot;&gt;&lt;br style=&quot;font-size: 13px;&quot;&gt;&lt;/div&gt;&lt;div style=&quot;font-size: 13px;&quot;&gt;&amp;nbsp; &amp;nbsp; return False&lt;/div&gt;&lt;div style=&quot;font-size: 13px;&quot;&gt;&lt;br style=&quot;font-size: 13px;&quot;&gt;&lt;/div&gt;&lt;div style=&quot;font-size: 13px;&quot;&gt;def check(has_close_elements):&lt;/div&gt;&lt;div style=&quot;font-size: 13px;&quot;&gt;&amp;nbsp; &amp;nbsp; assert has_close_elements([1.0, 2.0, 3.9, 4.0, 5.0, 2.2], 0.3) == True&lt;/div&gt;&lt;div style=&quot;font-size: 13px;&quot;&gt;&amp;nbsp; &amp;nbsp; assert has_close_elements([1.0, 2.0, 3.9, 4.0, 5.0, 2.2], 0.05) == False&lt;/div&gt;&lt;div style=&quot;font-size: 13px;&quot;&gt;&amp;nbsp; &amp;nbsp; assert has_close_elements([1.0, 2.0, 5.9, 4.0, 5.0], 0.95) == True&lt;/div&gt;&lt;div style=&quot;font-size: 13px;&quot;&gt;&amp;nbsp; &amp;nbsp; assert has_close_elements([1.0, 2.0, 5.9, 4.0, 5.0], 0.8) == False&lt;/div&gt;&lt;div style=&quot;font-size: 13px;&quot;&gt;&amp;nbsp; &amp;nbsp; assert has_close_elements([1.0, 2.0, 3.0, 4.0, 5.0, 2.0], 0.1) == True&lt;/div&gt;&lt;div style=&quot;font-size: 13px;&quot;&gt;&amp;nbsp; &amp;nbsp; assert has_close_elements([1.1, 2.2, 3.1, 4.1, 5.1], 1.0) == True&lt;/div&gt;&lt;div style=&quot;font-size: 13px;&quot;&gt;&amp;nbsp; &amp;nbsp; assert has_close_elements([1.1, 2.2, 3.1, 4.1, 5.1], 0.5) == False&lt;/div&gt;&lt;div style=&quot;font-size: 13px;&quot;&gt;&lt;br style=&quot;font-size: 13px;&quot;&gt;&lt;/div&gt;&lt;div style=&quot;font-size: 13px;&quot;&gt;check(has_close_elements)&lt;/div&gt;&lt;div style=&quot;font-size: 13px;&quot;&gt;&lt;br style=&quot;font-size: 13px;&quot;&gt;&lt;/div&gt;&lt;div style=&quot;font-size: 13px;&quot;&gt;Fix bugs in has_close_elements.&lt;/div&gt;" style="text;html=1;strokeColor=none;fillColor=none;align=left;verticalAlign=middle;whiteSpace=wrap;rounded=0;spacing=5;fontSize=13;" parent="eerOrv8SsKk9PBUY99kf-1" vertex="1">
          <mxGeometry x="160" y="260" width="400" height="470" as="geometry" />
        </mxCell>
        <mxCell id="eerOrv8SsKk9PBUY99kf-29" value="" style="rounded=0;whiteSpace=wrap;html=1;fillColor=#f8cecc;strokeColor=#b85450;" parent="eerOrv8SsKk9PBUY99kf-1" vertex="1">
          <mxGeometry x="160" y="730" width="400" height="210" as="geometry" />
        </mxCell>
        <mxCell id="eerOrv8SsKk9PBUY99kf-30" value="&lt;div style=&quot;font-size: 13px;&quot;&gt;&lt;div style=&quot;border-color: var(--border-color); font-size: 13px;&quot;&gt;from typing import List&lt;/div&gt;&lt;div style=&quot;border-color: var(--border-color); font-size: 13px;&quot;&gt;&lt;br style=&quot;border-color: var(--border-color); font-size: 13px;&quot;&gt;&lt;/div&gt;&lt;div style=&quot;border-color: var(--border-color); font-size: 13px;&quot;&gt;&lt;br style=&quot;border-color: var(--border-color); font-size: 13px;&quot;&gt;&lt;/div&gt;&lt;div style=&quot;border-color: var(--border-color); font-size: 13px;&quot;&gt;def has_close_elements(numbers: List[float], threshold: float) -&amp;gt; bool:&lt;/div&gt;&lt;/div&gt;&lt;div style=&quot;font-size: 13px;&quot;&gt;&amp;nbsp; &amp;nbsp; for idx, elem in enumerate(numbers):&lt;/div&gt;&lt;div style=&quot;font-size: 13px;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; for idx2, elem2 in enumerate(numbers):&lt;/div&gt;&lt;div style=&quot;font-size: 13px;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; if idx != idx2:&lt;/div&gt;&lt;div style=&quot;font-size: 13px;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; distance = abs(elem - elem2)&lt;/div&gt;&lt;div style=&quot;font-size: 13px;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; if distance &amp;lt; threshold:&lt;/div&gt;&lt;div style=&quot;font-size: 13px;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; return True&lt;/div&gt;&lt;div style=&quot;font-size: 13px;&quot;&gt;&lt;br style=&quot;font-size: 13px;&quot;&gt;&lt;/div&gt;&lt;div style=&quot;font-size: 13px;&quot;&gt;&amp;nbsp; &amp;nbsp; return False&lt;/div&gt;" style="text;html=1;strokeColor=none;fillColor=none;align=left;verticalAlign=middle;whiteSpace=wrap;rounded=0;spacing=5;fontSize=13;" parent="eerOrv8SsKk9PBUY99kf-1" vertex="1">
          <mxGeometry x="160" y="730" width="400" height="210" as="geometry" />
        </mxCell>
        <mxCell id="eerOrv8SsKk9PBUY99kf-31" value="" style="rounded=0;whiteSpace=wrap;html=1;fillColor=#f8cecc;strokeColor=#b85450;" parent="eerOrv8SsKk9PBUY99kf-1" vertex="1">
          <mxGeometry x="1040" y="875" width="100" height="50" as="geometry" />
        </mxCell>
        <mxCell id="iRLi0OpNOA7eccYOhiPZ-1" value="&lt;div style=&quot;font-size: 13px;&quot;&gt;&lt;div style=&quot;border-color: var(--border-color); font-size: 13px;&quot;&gt;from typing import List&lt;/div&gt;&lt;div style=&quot;border-color: var(--border-color); font-size: 13px;&quot;&gt;&lt;br style=&quot;border-color: var(--border-color); font-size: 13px;&quot;&gt;&lt;/div&gt;&lt;div style=&quot;border-color: var(--border-color); font-size: 13px;&quot;&gt;&lt;br style=&quot;border-color: var(--border-color); font-size: 13px;&quot;&gt;&lt;/div&gt;&lt;div style=&quot;border-color: var(--border-color); font-size: 13px;&quot;&gt;def has_close_elements(numbers: List[float], threshold: float) -&amp;gt; bool:&lt;/div&gt;&lt;/div&gt;&lt;div style=&quot;font-size: 13px;&quot;&gt;&amp;nbsp; &amp;nbsp; for idx, elem in enumerate(numbers):&lt;/div&gt;&lt;div style=&quot;font-size: 13px;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; for idx2, elem2 in enumerate(numbers):&lt;/div&gt;&lt;div style=&quot;font-size: 13px;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; if idx != idx2:&lt;/div&gt;&lt;div style=&quot;font-size: 13px;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; distance = abs(elem - elem2)&lt;/div&gt;&lt;div style=&quot;font-size: 13px;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; if distance &amp;lt; threshold:&lt;/div&gt;&lt;div style=&quot;font-size: 13px;&quot;&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; return True&lt;/div&gt;&lt;div style=&quot;font-size: 13px;&quot;&gt;&lt;br style=&quot;font-size: 13px;&quot;&gt;&lt;/div&gt;&lt;div style=&quot;font-size: 13px;&quot;&gt;&amp;nbsp; &amp;nbsp; return False&lt;/div&gt;" style="text;html=1;strokeColor=none;fillColor=none;align=left;verticalAlign=middle;whiteSpace=wrap;rounded=0;spacing=5;fontSize=13;" parent="eerOrv8SsKk9PBUY99kf-1" vertex="1">
          <mxGeometry x="580" y="730" width="400" height="210" as="geometry" />
        </mxCell>
        <mxCell id="iRLi0OpNOA7eccYOhiPZ-6" value="" style="endArrow=classic;html=1;curved=1;strokeWidth=6;" parent="eerOrv8SsKk9PBUY99kf-1" edge="1">
          <mxGeometry width="50" height="50" relative="1" as="geometry">
            <mxPoint x="940" y="590" as="sourcePoint" />
            <mxPoint x="840" y="660" as="targetPoint" />
            <Array as="points">
              <mxPoint x="1040" y="630" />
            </Array>
          </mxGeometry>
        </mxCell>
      </root>
    </mxGraphModel>
  </diagram>
  <diagram name="Main Plot" id="cp3_UKBLrT-koQNJue10">
    <mxGraphModel dx="984" dy="662" grid="1" gridSize="10" guides="1" tooltips="1" connect="1" arrows="1" fold="1" page="1" pageScale="1" pageWidth="850" pageHeight="1100" math="0" shadow="0">
      <root>
        <mxCell id="Nk4qV-HExm6ET_pQnzFB-0" />
        <mxCell id="Nk4qV-HExm6ET_pQnzFB-1" parent="Nk4qV-HExm6ET_pQnzFB-0" />
        <mxCell id="nPtIcV1WUJgWKUng7Wmg-3" value="" style="shape=image;verticalLabelPosition=bottom;labelBackgroundColor=default;verticalAlign=top;aspect=fixed;imageAspect=0;image=data:image/png,;clipPath=inset(1.38% 0.33% 0% 6.67%);" parent="Nk4qV-HExm6ET_pQnzFB-1" vertex="1">
          <mxGeometry x="111" y="399" width="884" height="340.61" as="geometry" />
        </mxCell>
        <mxCell id="Nk4qV-HExm6ET_pQnzFB-3" value="" style="rounded=0;whiteSpace=wrap;html=1;fillColor=#dae8fc;strokeColor=#6c8ebf;" parent="Nk4qV-HExm6ET_pQnzFB-1" vertex="1">
          <mxGeometry x="120" y="160" width="360" height="180" as="geometry" />
        </mxCell>
        <mxCell id="Nk4qV-HExm6ET_pQnzFB-4" value="&lt;div style=&quot;font-size: 16px;&quot;&gt;&lt;div style=&quot;font-size: 16px;&quot;&gt;import numpy as np&lt;/div&gt;&lt;div style=&quot;font-size: 16px;&quot;&gt;import matplotlib.pyplot as plt&lt;/div&gt;&lt;div style=&quot;font-size: 16px;&quot;&gt;&lt;br style=&quot;font-size: 16px;&quot;&gt;&lt;/div&gt;&lt;div style=&quot;font-size: 16px;&quot;&gt;# generate sample data&lt;/div&gt;&lt;div style=&quot;font-size: 16px;&quot;&gt;x_data = np.linspace(-5, 5, 20)&lt;/div&gt;&lt;div style=&quot;font-size: 16px;&quot;&gt;y_data = np.random.normal(0.0, 1.0, x_data.size)&lt;/div&gt;&lt;div style=&quot;font-size: 16px;&quot;&gt;&lt;br style=&quot;font-size: 16px;&quot;&gt;&lt;/div&gt;&lt;div style=&quot;font-size: 16px;&quot;&gt;plt.plot(x_data, y_data, &#39;o&#39;)&lt;/div&gt;&lt;div style=&quot;font-size: 16px;&quot;&gt;plt.show()&lt;/div&gt;&lt;/div&gt;" style="text;html=1;strokeColor=#6C8EBF;fillColor=none;align=left;verticalAlign=middle;whiteSpace=wrap;rounded=0;spacing=5;fontSize=16;fontStyle=0;strokeWidth=3;" parent="Nk4qV-HExm6ET_pQnzFB-1" vertex="1">
          <mxGeometry x="120" y="160" width="360" height="180" as="geometry" />
        </mxCell>
        <mxCell id="Nk4qV-HExm6ET_pQnzFB-5" value="&lt;b&gt;&lt;font style=&quot;font-size: 18px;&quot;&gt;Code Before&lt;/font&gt;&lt;/b&gt;" style="text;html=1;strokeColor=none;fillColor=none;align=center;verticalAlign=middle;whiteSpace=wrap;rounded=0;" parent="Nk4qV-HExm6ET_pQnzFB-1" vertex="1">
          <mxGeometry x="350" y="160" width="130" height="30" as="geometry" />
        </mxCell>
        <mxCell id="Nk4qV-HExm6ET_pQnzFB-6" value="" style="rounded=0;whiteSpace=wrap;html=1;fillColor=#dae8fc;strokeColor=#6c8ebf;strokeWidth=3;" parent="Nk4qV-HExm6ET_pQnzFB-1" vertex="1">
          <mxGeometry x="120" y="350" width="360" height="50" as="geometry" />
        </mxCell>
        <mxCell id="Nk4qV-HExm6ET_pQnzFB-7" value="" style="rounded=0;whiteSpace=wrap;html=1;fillColor=#f8cecc;strokeColor=#b85450;" parent="Nk4qV-HExm6ET_pQnzFB-1" vertex="1">
          <mxGeometry x="510" y="160" width="480" height="240" as="geometry" />
        </mxCell>
        <mxCell id="Nk4qV-HExm6ET_pQnzFB-8" value="&lt;b&gt;&lt;font style=&quot;font-size: 18px;&quot;&gt;Commit &lt;br&gt;Message&lt;/font&gt;&lt;/b&gt;" style="text;html=1;strokeColor=none;fillColor=none;align=center;verticalAlign=middle;whiteSpace=wrap;rounded=0;" parent="Nk4qV-HExm6ET_pQnzFB-1" vertex="1">
          <mxGeometry x="390" y="350" width="90" height="50" as="geometry" />
        </mxCell>
        <mxCell id="Nk4qV-HExm6ET_pQnzFB-9" value="&lt;b&gt;&lt;font style=&quot;font-size: 18px;&quot;&gt;Code After&lt;/font&gt;&lt;/b&gt;" style="text;html=1;strokeColor=none;fillColor=none;align=center;verticalAlign=middle;whiteSpace=wrap;rounded=0;" parent="Nk4qV-HExm6ET_pQnzFB-1" vertex="1">
          <mxGeometry x="870" y="160" width="120" height="30" as="geometry" />
        </mxCell>
        <mxCell id="Nk4qV-HExm6ET_pQnzFB-10" value="&lt;div style=&quot;font-size: 16px;&quot;&gt;&lt;font style=&quot;font-size: 16px;&quot;&gt;Change to sin() function with noise&lt;/font&gt;&lt;/div&gt;" style="text;html=1;strokeColor=none;fillColor=none;align=left;verticalAlign=middle;whiteSpace=wrap;rounded=0;spacing=5;fontSize=16;" parent="Nk4qV-HExm6ET_pQnzFB-1" vertex="1">
          <mxGeometry x="120" y="350" width="270" height="50" as="geometry" />
        </mxCell>
        <mxCell id="Nk4qV-HExm6ET_pQnzFB-11" value="&lt;div style=&quot;&quot;&gt;&lt;div style=&quot;border-color: var(--border-color);&quot;&gt;&lt;div style=&quot;border-color: var(--border-color);&quot;&gt;import math&lt;/div&gt;&lt;div style=&quot;border-color: var(--border-color);&quot;&gt;import numpy as np&lt;/div&gt;&lt;div style=&quot;border-color: var(--border-color);&quot;&gt;import matplotlib.pyplot as plt&lt;/div&gt;&lt;div style=&quot;border-color: var(--border-color);&quot;&gt;&lt;br&gt;&lt;/div&gt;&lt;div style=&quot;border-color: var(--border-color);&quot;&gt;# generate sample data&lt;/div&gt;&lt;div style=&quot;border-color: var(--border-color);&quot;&gt;x_data = np.linspace(-math.pi, math.pi, 30)&lt;/div&gt;&lt;div style=&quot;border-color: var(--border-color);&quot;&gt;y_data = np.sin(x_data) + np.random.normal(0.0, 0.1, x_data.size)&lt;/div&gt;&lt;div style=&quot;border-color: var(--border-color);&quot;&gt;&lt;br&gt;&lt;/div&gt;&lt;div style=&quot;border-color: var(--border-color);&quot;&gt;plt.plot(x_data, y_data, &#39;o&#39;)&lt;/div&gt;&lt;div style=&quot;border-color: var(--border-color);&quot;&gt;plt.show()&lt;/div&gt;&lt;div style=&quot;font-size: 16px;&quot;&gt;&lt;br&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;" style="text;html=1;strokeColor=#b00707;fillColor=none;align=left;verticalAlign=middle;whiteSpace=wrap;rounded=0;spacing=5;fontSize=16;strokeWidth=3;" parent="Nk4qV-HExm6ET_pQnzFB-1" vertex="1">
          <mxGeometry x="510" y="160" width="480" height="240" as="geometry" />
        </mxCell>
        <mxCell id="Nk4qV-HExm6ET_pQnzFB-12" value="" style="endArrow=classic;html=1;curved=1;strokeWidth=6;fontColor=#937AE2;" parent="Nk4qV-HExm6ET_pQnzFB-1" edge="1">
          <mxGeometry width="50" height="50" relative="1" as="geometry">
            <mxPoint x="470" y="320" as="sourcePoint" />
            <mxPoint x="520" y="370" as="targetPoint" />
            <Array as="points">
              <mxPoint x="470" y="380" />
            </Array>
          </mxGeometry>
        </mxCell>
        <mxCell id="Nk4qV-HExm6ET_pQnzFB-13" value="&lt;font face=&quot;Verdana&quot; style=&quot;font-size: 22px;&quot;&gt;1) CommitPack&lt;br&gt;&lt;br&gt;&lt;/font&gt;" style="text;html=1;align=center;verticalAlign=middle;resizable=0;points=[];autosize=1;strokeColor=none;fillColor=none;fontStyle=1;fontSize=20;" parent="Nk4qV-HExm6ET_pQnzFB-1" vertex="1">
          <mxGeometry x="95" y="115" width="210" height="70" as="geometry" />
        </mxCell>
        <mxCell id="Nk4qV-HExm6ET_pQnzFB-14" value="&lt;font face=&quot;Verdana&quot; style=&quot;font-size: 22px;&quot;&gt;2) HumanEvalPack&lt;/font&gt;" style="text;html=1;align=center;verticalAlign=middle;resizable=0;points=[];autosize=1;strokeColor=none;fillColor=none;fontStyle=1;fontSize=20;" parent="Nk4qV-HExm6ET_pQnzFB-1" vertex="1">
          <mxGeometry x="100" y="420" width="260" height="40" as="geometry" />
        </mxCell>
        <mxCell id="Nk4qV-HExm6ET_pQnzFB-15" value="" style="sketch=0;aspect=fixed;pointerEvents=1;shadow=0;dashed=0;html=1;strokeColor=none;labelPosition=center;verticalLabelPosition=bottom;verticalAlign=top;align=center;fillColor=#000000;shape=mxgraph.mscae.enterprise.lock;" parent="Nk4qV-HExm6ET_pQnzFB-1" vertex="1">
          <mxGeometry x="818" y="711" width="11" height="14.1" as="geometry" />
        </mxCell>
        <mxCell id="Nk4qV-HExm6ET_pQnzFB-16" value="" style="endArrow=none;dashed=1;html=1;rounded=0;strokeWidth=6;" parent="Nk4qV-HExm6ET_pQnzFB-1" edge="1">
          <mxGeometry width="50" height="50" relative="1" as="geometry">
            <mxPoint x="887" y="653" as="sourcePoint" />
            <mxPoint x="887" y="520" as="targetPoint" />
          </mxGeometry>
        </mxCell>
        <mxCell id="Nk4qV-HExm6ET_pQnzFB-17" value="" style="sketch=0;aspect=fixed;pointerEvents=1;shadow=0;dashed=0;html=1;strokeColor=none;labelPosition=center;verticalLabelPosition=bottom;verticalAlign=top;align=center;fillColor=#000000;shape=mxgraph.mscae.enterprise.lock;" parent="Nk4qV-HExm6ET_pQnzFB-1" vertex="1">
          <mxGeometry x="946" y="711" width="11" height="14.1" as="geometry" />
        </mxCell>
        <mxCell id="Nk4qV-HExm6ET_pQnzFB-18" value="" style="endArrow=none;dashed=1;html=1;rounded=0;strokeWidth=6;" parent="Nk4qV-HExm6ET_pQnzFB-1" edge="1">
          <mxGeometry width="50" height="50" relative="1" as="geometry">
            <mxPoint x="590" y="653" as="sourcePoint" />
            <mxPoint x="590" y="520" as="targetPoint" />
          </mxGeometry>
        </mxCell>
        <mxCell id="Nk4qV-HExm6ET_pQnzFB-19" value="" style="endArrow=none;dashed=1;html=1;rounded=0;strokeWidth=6;" parent="Nk4qV-HExm6ET_pQnzFB-1" edge="1">
          <mxGeometry width="50" height="50" relative="1" as="geometry">
            <mxPoint x="294" y="653" as="sourcePoint" />
            <mxPoint x="294" y="520" as="targetPoint" />
          </mxGeometry>
        </mxCell>
      </root>
    </mxGraphModel>
  </diagram>
  <diagram name="Copy of Main Plot" id="SzmZTkVAaYg2FfX2-6i9">
    <mxGraphModel dx="386" dy="260" grid="1" gridSize="10" guides="1" tooltips="1" connect="1" arrows="1" fold="1" page="1" pageScale="1" pageWidth="850" pageHeight="1100" math="0" shadow="0">
      <root>
        <mxCell id="dlXmogDdkWKebQRafdZQ-0" />
        <mxCell id="dlXmogDdkWKebQRafdZQ-1" parent="dlXmogDdkWKebQRafdZQ-0" />
        <mxCell id="FlilAxs0DuMXFKJehSwL-4" value="" style="shape=image;verticalLabelPosition=bottom;labelBackgroundColor=default;verticalAlign=top;aspect=fixed;imageAspect=0;image=data:image/png,;clipPath=inset(2.78% 0.33% 0% 6.33%);" vertex="1" parent="dlXmogDdkWKebQRafdZQ-1">
          <mxGeometry x="105" y="401" width="894.14" height="335.3" as="geometry" />
        </mxCell>
        <mxCell id="dlXmogDdkWKebQRafdZQ-3" value="" style="rounded=0;whiteSpace=wrap;html=1;fillColor=#dae8fc;strokeColor=#6c8ebf;" vertex="1" parent="dlXmogDdkWKebQRafdZQ-1">
          <mxGeometry x="120" y="160" width="360" height="180" as="geometry" />
        </mxCell>
        <mxCell id="dlXmogDdkWKebQRafdZQ-4" value="&lt;div style=&quot;font-size: 16px;&quot;&gt;&lt;div style=&quot;font-size: 16px;&quot;&gt;import numpy as np&lt;/div&gt;&lt;div style=&quot;font-size: 16px;&quot;&gt;import matplotlib.pyplot as plt&lt;/div&gt;&lt;div style=&quot;font-size: 16px;&quot;&gt;&lt;br style=&quot;font-size: 16px;&quot;&gt;&lt;/div&gt;&lt;div style=&quot;font-size: 16px;&quot;&gt;# generate sample data&lt;/div&gt;&lt;div style=&quot;font-size: 16px;&quot;&gt;x_data = np.linspace(-5, 5, 20)&lt;/div&gt;&lt;div style=&quot;font-size: 16px;&quot;&gt;y_data = np.random.normal(0.0, 1.0, x_data.size)&lt;/div&gt;&lt;div style=&quot;font-size: 16px;&quot;&gt;&lt;br style=&quot;font-size: 16px;&quot;&gt;&lt;/div&gt;&lt;div style=&quot;font-size: 16px;&quot;&gt;plt.plot(x_data, y_data, &#39;o&#39;)&lt;/div&gt;&lt;div style=&quot;font-size: 16px;&quot;&gt;plt.show()&lt;/div&gt;&lt;/div&gt;" style="text;html=1;strokeColor=#6C8EBF;fillColor=none;align=left;verticalAlign=middle;whiteSpace=wrap;rounded=0;spacing=5;fontSize=16;fontStyle=0;strokeWidth=3;" vertex="1" parent="dlXmogDdkWKebQRafdZQ-1">
          <mxGeometry x="120" y="160" width="360" height="180" as="geometry" />
        </mxCell>
        <mxCell id="dlXmogDdkWKebQRafdZQ-5" value="&lt;b&gt;&lt;font style=&quot;font-size: 18px;&quot;&gt;Code Before&lt;/font&gt;&lt;/b&gt;" style="text;html=1;strokeColor=none;fillColor=none;align=center;verticalAlign=middle;whiteSpace=wrap;rounded=0;" vertex="1" parent="dlXmogDdkWKebQRafdZQ-1">
          <mxGeometry x="350" y="160" width="130" height="30" as="geometry" />
        </mxCell>
        <mxCell id="dlXmogDdkWKebQRafdZQ-6" value="" style="rounded=0;whiteSpace=wrap;html=1;fillColor=#dae8fc;strokeColor=#6c8ebf;strokeWidth=3;" vertex="1" parent="dlXmogDdkWKebQRafdZQ-1">
          <mxGeometry x="120" y="350" width="360" height="50" as="geometry" />
        </mxCell>
        <mxCell id="dlXmogDdkWKebQRafdZQ-7" value="" style="rounded=0;whiteSpace=wrap;html=1;fillColor=#f8cecc;strokeColor=#b85450;" vertex="1" parent="dlXmogDdkWKebQRafdZQ-1">
          <mxGeometry x="510" y="160" width="480" height="240" as="geometry" />
        </mxCell>
        <mxCell id="dlXmogDdkWKebQRafdZQ-8" value="&lt;b&gt;&lt;font style=&quot;font-size: 18px;&quot;&gt;Commit &lt;br&gt;Message&lt;/font&gt;&lt;/b&gt;" style="text;html=1;strokeColor=none;fillColor=none;align=center;verticalAlign=middle;whiteSpace=wrap;rounded=0;" vertex="1" parent="dlXmogDdkWKebQRafdZQ-1">
          <mxGeometry x="390" y="350" width="90" height="50" as="geometry" />
        </mxCell>
        <mxCell id="dlXmogDdkWKebQRafdZQ-9" value="&lt;b&gt;&lt;font style=&quot;font-size: 18px;&quot;&gt;Code After&lt;/font&gt;&lt;/b&gt;" style="text;html=1;strokeColor=none;fillColor=none;align=center;verticalAlign=middle;whiteSpace=wrap;rounded=0;" vertex="1" parent="dlXmogDdkWKebQRafdZQ-1">
          <mxGeometry x="870" y="160" width="120" height="30" as="geometry" />
        </mxCell>
        <mxCell id="dlXmogDdkWKebQRafdZQ-10" value="&lt;div style=&quot;font-size: 16px;&quot;&gt;&lt;font style=&quot;font-size: 16px;&quot;&gt;Change to sin() function with noise&lt;/font&gt;&lt;/div&gt;" style="text;html=1;strokeColor=none;fillColor=none;align=left;verticalAlign=middle;whiteSpace=wrap;rounded=0;spacing=5;fontSize=16;" vertex="1" parent="dlXmogDdkWKebQRafdZQ-1">
          <mxGeometry x="120" y="350" width="270" height="50" as="geometry" />
        </mxCell>
        <mxCell id="dlXmogDdkWKebQRafdZQ-11" value="&lt;div style=&quot;&quot;&gt;&lt;div style=&quot;border-color: var(--border-color);&quot;&gt;&lt;div style=&quot;border-color: var(--border-color);&quot;&gt;import math&lt;/div&gt;&lt;div style=&quot;border-color: var(--border-color);&quot;&gt;import numpy as np&lt;/div&gt;&lt;div style=&quot;border-color: var(--border-color);&quot;&gt;import matplotlib.pyplot as plt&lt;/div&gt;&lt;div style=&quot;border-color: var(--border-color);&quot;&gt;&lt;br&gt;&lt;/div&gt;&lt;div style=&quot;border-color: var(--border-color);&quot;&gt;# generate sample data&lt;/div&gt;&lt;div style=&quot;border-color: var(--border-color);&quot;&gt;x_data = np.linspace(-math.pi, math.pi, 30)&lt;/div&gt;&lt;div style=&quot;border-color: var(--border-color);&quot;&gt;y_data = np.sin(x_data) + np.random.normal(0.0, 0.1, x_data.size)&lt;/div&gt;&lt;div style=&quot;border-color: var(--border-color);&quot;&gt;&lt;br&gt;&lt;/div&gt;&lt;div style=&quot;border-color: var(--border-color);&quot;&gt;plt.plot(x_data, y_data, &#39;o&#39;)&lt;/div&gt;&lt;div style=&quot;border-color: var(--border-color);&quot;&gt;plt.show()&lt;/div&gt;&lt;div style=&quot;font-size: 16px;&quot;&gt;&lt;br&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;" style="text;html=1;strokeColor=#b00707;fillColor=none;align=left;verticalAlign=middle;whiteSpace=wrap;rounded=0;spacing=5;fontSize=16;strokeWidth=3;" vertex="1" parent="dlXmogDdkWKebQRafdZQ-1">
          <mxGeometry x="510" y="160" width="480" height="240" as="geometry" />
        </mxCell>
        <mxCell id="dlXmogDdkWKebQRafdZQ-12" value="" style="endArrow=classic;html=1;curved=1;strokeWidth=6;fontColor=#937AE2;" edge="1" parent="dlXmogDdkWKebQRafdZQ-1">
          <mxGeometry width="50" height="50" relative="1" as="geometry">
            <mxPoint x="470" y="320" as="sourcePoint" />
            <mxPoint x="520" y="370" as="targetPoint" />
            <Array as="points">
              <mxPoint x="470" y="380" />
            </Array>
          </mxGeometry>
        </mxCell>
        <mxCell id="dlXmogDdkWKebQRafdZQ-13" value="&lt;font face=&quot;Verdana&quot; style=&quot;font-size: 22px;&quot;&gt;1) CommitPack&lt;br&gt;&lt;br&gt;&lt;/font&gt;" style="text;html=1;align=center;verticalAlign=middle;resizable=0;points=[];autosize=1;strokeColor=none;fillColor=none;fontStyle=1;fontSize=20;" vertex="1" parent="dlXmogDdkWKebQRafdZQ-1">
          <mxGeometry x="95" y="115" width="210" height="70" as="geometry" />
        </mxCell>
        <mxCell id="dlXmogDdkWKebQRafdZQ-14" value="&lt;font face=&quot;Verdana&quot; style=&quot;font-size: 22px;&quot;&gt;2) HumanEvalPack&lt;/font&gt;" style="text;html=1;align=center;verticalAlign=middle;resizable=0;points=[];autosize=1;strokeColor=none;fillColor=none;fontStyle=1;fontSize=20;" vertex="1" parent="dlXmogDdkWKebQRafdZQ-1">
          <mxGeometry x="100" y="420" width="260" height="40" as="geometry" />
        </mxCell>
        <mxCell id="dlXmogDdkWKebQRafdZQ-15" value="" style="sketch=0;aspect=fixed;pointerEvents=1;shadow=0;dashed=0;html=1;strokeColor=none;labelPosition=center;verticalLabelPosition=bottom;verticalAlign=top;align=center;fillColor=#000000;shape=mxgraph.mscae.enterprise.lock;" vertex="1" parent="dlXmogDdkWKebQRafdZQ-1">
          <mxGeometry x="844" y="706" width="11" height="14.1" as="geometry" />
        </mxCell>
        <mxCell id="dlXmogDdkWKebQRafdZQ-16" value="" style="endArrow=none;dashed=1;html=1;rounded=0;strokeWidth=6;" edge="1" parent="dlXmogDdkWKebQRafdZQ-1">
          <mxGeometry width="50" height="50" relative="1" as="geometry">
            <mxPoint x="877" y="653" as="sourcePoint" />
            <mxPoint x="877" y="520" as="targetPoint" />
          </mxGeometry>
        </mxCell>
        <mxCell id="dlXmogDdkWKebQRafdZQ-18" value="" style="endArrow=none;dashed=1;html=1;rounded=0;strokeWidth=6;" edge="1" parent="dlXmogDdkWKebQRafdZQ-1">
          <mxGeometry width="50" height="50" relative="1" as="geometry">
            <mxPoint x="579" y="653" as="sourcePoint" />
            <mxPoint x="579" y="520" as="targetPoint" />
          </mxGeometry>
        </mxCell>
        <mxCell id="dlXmogDdkWKebQRafdZQ-19" value="" style="endArrow=none;dashed=1;html=1;rounded=0;strokeWidth=6;" edge="1" parent="dlXmogDdkWKebQRafdZQ-1">
          <mxGeometry width="50" height="50" relative="1" as="geometry">
            <mxPoint x="281" y="653" as="sourcePoint" />
            <mxPoint x="281" y="520" as="targetPoint" />
          </mxGeometry>
        </mxCell>
        <mxCell id="FlilAxs0DuMXFKJehSwL-2" value="" style="sketch=0;aspect=fixed;pointerEvents=1;shadow=0;dashed=0;html=1;strokeColor=none;labelPosition=center;verticalLabelPosition=bottom;verticalAlign=top;align=center;fillColor=#000000;shape=mxgraph.mscae.enterprise.lock;" vertex="1" parent="dlXmogDdkWKebQRafdZQ-1">
          <mxGeometry x="948" y="706" width="11" height="14.1" as="geometry" />
        </mxCell>
        <mxCell id="FlilAxs0DuMXFKJehSwL-3" value="" style="sketch=0;aspect=fixed;pointerEvents=1;shadow=0;dashed=0;html=1;strokeColor=none;labelPosition=center;verticalLabelPosition=bottom;verticalAlign=top;align=center;fillColor=#000000;shape=mxgraph.mscae.enterprise.lock;" vertex="1" parent="dlXmogDdkWKebQRafdZQ-1">
          <mxGeometry x="674" y="706" width="11" height="14.1" as="geometry" />
        </mxCell>
      </root>
    </mxGraphModel>
  </diagram>
</mxfile>
